START

DECLARE MAX AS INTEGER = 100

DECLARE TYPE Item
    id_barang AS STRING
    nama_barang AS STRING
    harga_barang AS DOUBLE
    stok_barang AS INTEGER
END TYPE

DECLARE TYPE Transaksi
    barang AS ARRAY OF Item WITH MAXIMUM SIZE MAX
    jumlah_barang AS INTEGER
    total AS DOUBLE
    metodePembayaran AS STRING
    waktu AS STRING
END TYPE

DECLARE inventaris AS ARRAY OF Item WITH MAXIMUM SIZE MAX
DECLARE penjualan AS ARRAY OF Transaksi WITH MAXIMUM SIZE MAX
DECLARE jumlah_barang AS INTEGER = 0
DECLARE jumlah_transaksi AS INTEGER = 0

FUNCTION tambahBarang()
    DECLARE pilihan AS CHAR
    
    REPEAT
        IF jumlah_barang >= MAX THEN
            DISPLAY "Data Penuh! Tidak dapat menambahkan barang baru."
            RETURN
        END IF

        DISPLAY "Masukkan ID Barang: "
        INPUT inventaris[jumlah_barang].id_barang
        
        FOR i FROM 0 TO jumlah_barang - 1 DO
            IF inventaris[i].id_barang == inventaris[jumlah_barang].id_barang THEN
                DISPLAY "ID Tersebut Sudah Ada!"
                RETURN
            END IF
        END FOR

        DISPLAY "Masukkan Nama Barang: "
        INPUT inventaris[jumlah_barang].nama_barang
        
        FOR i FROM 0 TO jumlah_barang - 1 DO
            IF inventaris[i].nama_barang == inventaris[jumlah_barang].nama_barang THEN
                DISPLAY "Nama Barang Tersebut Sudah Ada!"
                RETURN
            END IF
        END FOR

        DISPLAY "Masukkan Harga Barang: "
        INPUT inventaris[jumlah_barang].harga_barang
        
        IF inventaris[jumlah_barang].harga_barang < 0 THEN
            DISPLAY "Harga Tidak Boleh Negatif!"
            RETURN
        END IF

        DISPLAY "Masukkan Stok Barang: "
        INPUT inventaris[jumlah_barang].stok_barang
        
        IF inventaris[jumlah_barang].stok_barang < 0 THEN
            DISPLAY "Stok Tidak Boleh Negatif!"
            RETURN
        END IF

        INCREMENT jumlah_barang
        DISPLAY "Barang Berhasil Ditambahkan!"
        
        DISPLAY "Apakah Anda Ingin Menambahkan Barang Lagi (y/n): "
        INPUT pilihan
    UNTIL pilihan != 'y' AND pilihan != 'Y'
END FUNCTION

FUNCTION editBarang()
    DECLARE id_barang AS STRING
    DECLARE harga_baru AS INTEGER
    DECLARE nama_baru AS STRING
    DECLARE stok_baru AS INTEGER

    DISPLAY "Masukkan ID Barang yang ingin diubah: "
    INPUT id_barang

    FOR i FROM 0 TO jumlah_barang - 1 DO
        IF inventaris[i].id_barang == id_barang THEN
            DISPLAY "Barang ditemukan:"
            DISPLAY "Nama Barang: ", inventaris[i].nama_barang
            DISPLAY "Harga Barang: ", inventaris[i].harga_barang
            DISPLAY "Stok Barang: ", inventaris[i].stok_barang

            DISPLAY "Masukkan Nama Barang Baru: "
            INPUT nama_baru
            
            FOR j FROM 0 TO jumlah_barang - 1 DO
                IF inventaris[j].nama_barang == nama_baru AND 
                   inventaris[j].id_barang != id_barang THEN
                    DISPLAY "Nama Barang Tersebut Sudah Ada!"
                    RETURN
                END IF
            END FOR
            SET inventaris[i].nama_barang = nama_baru

            DISPLAY "Masukkan Harga Barang Baru: "
            INPUT harga_baru
            IF harga_baru < 0 THEN
                DISPLAY "Harga tidak boleh negatif!"
                RETURN
            END IF
            SET inventaris[i].harga_barang = harga_baru

            DISPLAY "Masukkan Stok Barang Baru: "
            INPUT stok_baru
            IF stok_baru < 0 THEN
                DISPLAY "Stok tidak boleh negatif!"
                RETURN
            END IF
            SET inventaris[i].stok_barang = stok_baru

            DISPLAY "Barang berhasil diperbarui!"
            RETURN
        END IF
    END FOR
    DISPLAY "ID Barang tidak ditemukan."
END FUNCTION

FUNCTION hapusBarang()
    DECLARE id_barang AS STRING
    
    DISPLAY "Masukkan ID Barang yang ingin dihapus: "
    INPUT id_barang

    FOR i FROM 0 TO jumlah_barang - 1 DO
        IF inventaris[i].id_barang == id_barang THEN
            FOR j FROM i TO jumlah_barang - 2 DO
                SET inventaris[j] = inventaris[j + 1]
            END FOR
            DECREMENT jumlah_barang
            DISPLAY "Barang berhasil dihapus!"
            RETURN
        END IF
    END FOR
    DISPLAY "ID Barang tidak ditemukan."
END FUNCTION

FUNCTION tampilkanSemuaBarang()
    IF jumlah_barang == 0 THEN
        DISPLAY "Tidak Ada Barang"
        RETURN
    END IF

    DISPLAY "ID Barang | Nama Barang | Harga Barang | Stok Barang"
    FOR i FROM 0 TO jumlah_barang - 1 DO
        DISPLAY inventaris[i].id_barang, " | ",
                inventaris[i].nama_barang, " | ",
                inventaris[i].harga_barang, " | ",
                inventaris[i].stok_barang
    END FOR
END FUNCTION

FUNCTION dapatkanWaktuSekarang() RETURNS STRING
    RETURN CURRENT_DATE_FORMAT("DD-MM-YYYY")
END FUNCTION

FUNCTION ProsesTransaksi()
    IF jumlah_barang == 0 THEN
        DISPLAY "Tidak Ada Barang"
        RETURN
    END IF

    DECLARE namaBarang AS STRING
    DECLARE jumlah AS INTEGER
    DECLARE transaksi AS Transaksi
    DECLARE total AS DOUBLE = 0
    DECLARE total_jumlah_barang AS INTEGER = 0
    DECLARE pilihan AS CHAR

    WHILE TRUE DO
        DISPLAY "Masukkan Nama Barang (Atau 'sudah' Untuk Mengakhiri): "
        INPUT namaBarang
        
        IF namaBarang == "sudah" THEN
            BREAK
        END IF

        DECLARE barangDitemukan AS BOOLEAN = FALSE
        FOR i FROM 0 TO jumlah_barang - 1 DO
            IF inventaris[i].nama_barang == namaBarang THEN
                SET barangDitemukan = TRUE
                DISPLAY "Masukkan Jumlah Barang: "
                INPUT jumlah

                IF jumlah > inventaris[i].stok_barang THEN
                    DISPLAY "Stok Tidak Mencukupi"
                ELSE
                    DECREMENT inventaris[i].stok_barang BY jumlah
                    SET transaksi.barang[transaksi.jumlah_barang] = inventaris[i]
                    SET transaksi.barang[transaksi.jumlah_barang].stok_barang = jumlah
                    INCREMENT transaksi.jumlah_barang
                    INCREMENT total BY (inventaris[i].harga_barang * jumlah)
                END IF
                BREAK
            END IF
        END FOR

        IF NOT barangDitemukan THEN
            DISPLAY "Nama Barang tidak ditemukan"
        END IF
    END WHILE

    DISPLAY "Pilih metode pembayaran:"
    DISPLAY "1. Tunai"
    DISPLAY "2. Kartu Kredit"
    DISPLAY "3. Dompet Digital"
    INPUT pilihan

    SWITCH pilihan
        CASE '1': SET transaksi.metodePembayaran = "Tunai"
        CASE '2': SET transaksi.metodePembayaran = "Kartu Kredit"
        CASE '3': SET transaksi.metodePembayaran = "Dompet Digital"
        DEFAULT: DISPLAY "Pilihan tidak valid"
    END SWITCH

    SET transaksi.total = total
    SET transaksi.waktu = dapatkanWaktuSekarang()
    SET penjualan[jumlah_transaksi] = transaksi
    INCREMENT jumlah_transaksi

    DISPLAY "Transaksi selesai!"
    DISPLAY "Detail Transaksi:"
    FOR i FROM 0 TO transaksi.jumlah_barang - 1 DO
        DISPLAY "Nama Barang: ", transaksi.barang[i].nama_barang
        DISPLAY "Jumlah: ", transaksi.barang[i].stok_barang
        DISPLAY "Harga Satuan: ", transaksi.barang[i].harga_barang
        DISPLAY "Subtotal: ", transaksi.barang[i].harga_barang * transaksi.barang[i].stok_barang
    END FOR
    DISPLAY "Total Pembayaran: ", total
    DISPLAY "Metode Pembayaran: ", transaksi.metodePembayaran
END FUNCTION

FUNCTION BuatLaporanPenjualan()
    IF jumlah_transaksi == 0 THEN
        DISPLAY "Tidak Ada Transaksi"
        RETURN
    END IF

    FOR i FROM 0 TO jumlah_transaksi - 1 DO
        FOR j FROM 0 TO penjualan[i].jumlah_barang - 1 DO
            DISPLAY "Transaksi #", i + 1
            DISPLAY "Nama Barang: ", penjualan[i].barang[j].nama_barang
            DISPLAY "Jumlah: ", penjualan[i].barang[j].stok_barang
            DISPLAY "Total: ", penjualan[i].barang[j].harga_barang * penjualan[i].barang[j].stok_barang
            DISPLAY "Metode: ", penjualan[i].metodePembayaran
            DISPLAY "Waktu: ", penjualan[i].waktu
        END FOR
    END FOR
END FUNCTION

FUNCTION SimpanTransaksikeFile()
    IF jumlah_transaksi == 0 THEN
        DISPLAY "Tidak Ada Transaksi"
        RETURN
    END IF

    OPEN FILE "datatransaksi.txt" FOR APPEND AS file
    IF file IS NOT OPEN THEN
        DISPLAY "Gagal Membuka File"
        RETURN
    END IF

    FOR i FROM 0 TO jumlah_transaksi - 1 DO
        FOR j FROM 0 TO penjualan[i].jumlah_barang - 1 DO
            WRITE TO file: 
                penjualan[i].barang[j].stok_barang, " | ",
                penjualan[i].barang[j].harga_barang * penjualan[i].barang[j].stok_barang, " | ",
                penjualan[i].metodePembayaran, " | ",
                penjualan[i].waktu
        END FOR
    END FOR

    CLOSE file
    DISPLAY "Transaksi Berhasil Disimpan"
END FUNCTION

FUNCTION laporanTransaksi()
    OPEN FILE "datatransaksi.txt" FOR READ AS file
    IF file IS NOT OPEN THEN
        DISPLAY "Tidak Ada Transaksi"
        RETURN
    END IF

    DISPLAY "Filter Laporan Transaksi:"
    DISPLAY "1. Laporan Harian"
    DISPLAY "2. Laporan Bulanan"
    DISPLAY "3. Laporan Tahunan"
    
    DECLARE pilihan, filter_hari, filter_bulan, filter_tahun AS INTEGER
    INPUT pilihan

    SWITCH pilihan
        CASE 1:
            INPUT "Masukkan tanggal (DD): " TO filter_hari
            INPUT "Masukkan bulan (MM): " TO filter_bulan
            INPUT "Masukkan tahun (YYYY): " TO filter_tahun
        CASE 2:
            SET filter_hari = 0
            INPUT "Masukkan bulan (MM): " TO filter_bulan
            INPUT "Masukkan tahun (YYYY): " TO filter_tahun
        CASE 3:
            SET filter_hari = 0
            SET filter_bulan = 0
            INPUT "Masukkan tahun (YYYY): " TO filter_tahun
    END SWITCH

    WHILE NOT EOF(file) DO
        READ FROM file: jumlah_barang, total_harga, metode, tanggal
        
        PARSE tanggal INTO hari, bulan, tahun
        
        IF (pilihan == 1 AND hari == filter_hari AND bulan == filter_bulan AND tahun == filter_tahun) OR
           (pilihan == 2 AND bulan == filter_bulan AND tahun == filter_tahun) OR
           (pilihan == 3 AND tahun == filter_tahun) THEN
            DISPLAY jumlah_barang, " | ", total_harga, " | ", metode, " | ", tanggal
        END IF
    END WHILE

    CLOSE file
END FUNCTION

MAIN
    DECLARE pilihan AS CHAR

    REPEAT
        DISPLAY "===================================="
        DISPLAY "Aplikasi Kasir Suka Maju Bersama"
        DISPLAY "===================================="
        DISPLAY "1. Tambah Barang"
        DISPLAY "2. Edit Barang"
        DISPLAY "3. Hapus Barang"
        DISPLAY "4. Tampilkan Semua Barang"
        DISPLAY "5. Tampilkan Metode Pembayaran"
        DISPLAY "6. Proses Transaksi"
        DISPLAY "7. Buat Laporan Penjualan"
        DISPLAY "8. Simpan Transaksi ke File"
        DISPLAY "9. Tampil Semua Laporan Transaksi"
        DISPLAY "0. Keluar"
        DISPLAY "===================================="
        
        INPUT pilihan

        SWITCH pilihan
            CASE '1': CALL tambahBarang()
            CASE '2': CALL editBarang()
            CASE '3': CALL hapusBarang()
            CASE '4': CALL tampilkanSemuaBarang()
            CASE '5': CALL TampilkanMetodePembayaran()
            CASE '6': CALL ProsesTransaksi()
            CASE '7': CALL BuatLaporanPenjualan()
            CASE '8': CALL SimpanTransaksikeFile()
            CASE '9': CALL laporanTransaksi()
            CASE '0': RETURN
            DEFAULT : DISPLAY "Pilihan tidak valid. Coba lagi."
        END SWITCH
    UNTIL pilihan == '0'
END MAIN
    DISPLAY "===================================="
    DISPLAY "Anda Keluar Dari Program"
    DISPLAY "===================================="
END
